function canvasSupport(n) {
  return !!n.getContext;
}

function canvasApp() {
  // Remove existing canvas if it exists
  if (document.getElementById("myCanvas")) {
    var canvasElement = document.getElementById("myCanvas");
    canvasElement.parentNode.removeChild(canvasElement);
  }

  var winwidth = Math.max(window.screen.width, window.innerWidth);
  var matrixwidth = winwidth / 10;
  var nodecimal = Math.round(matrixwidth);

  // Create a new canvas element
  var n = document.createElement("canvas");
  n.id = "myCanvas";
  n.classList = "background";
  document.getElementById("canvasContainer").appendChild(n);

  if (canvasSupport(n)) {
    var e = n.getContext("2d");
    var t = (n.width = window.innerWidth);
    var a = (n.height = window.innerHeight);
    var i = Array(nodecimal).join(0).split("");

    // Variables to control the update frequency
    var lastTime = 0;
    var updateInterval = 1000 / 24; // Update approximately 24 times per second

    // Start the animation using requestAnimationFrame
    function animate(time) {
      if (time - lastTime > updateInterval) {
        o();
        lastTime = time;
      }
      requestAnimationFrame(animate);
    }
    requestAnimationFrame(animate);

    function o() {
      e.save(); // Save the canvas state

      // Clear the canvas with a semi-transparent rectangle
      e.fillStyle = "rgba(0,0,0,.07)";
      e.fillRect(0, 0, t, a);

      // Set the text fill style and font
      e.fillStyle = color;
      e.font = "10px monospace";

      // Iterate over the array i
      i.map(function (n, t) {
        // Generate a random uppercase letter
        const text = String.fromCharCode(65 + Math.floor(Math.random() * 26));

        // Calculate the x-coordinate
        const x = t * 10 + 10;

        // Draw the text
        e.fillText(text, x, n);

        // Update the y-coordinate for the next frame
        i[t] = n > 100 + 3e4 * Math.random() ? 0 : n + 10;
      });

      e.restore(); // Restore the canvas state
    }
  }
}

canvasApp();
